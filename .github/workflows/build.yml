name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      docker_tag:
        type: choice
        description: 'Docker Image Tag'
        default: 'test'
        options:
          - test
          - dev

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pocket-moodle-updates:${{ github.event.inputs.docker_tag || github.event_name == 'release' && 'latest' }}

      - name: Checkout server_side_configs
        uses: actions/checkout@v3
        with:
          repository: AITUSAIT/server_side_configs
          ref: main
          token: ${{ secrets.PAT_TOKEN }}

      - name: Copy .env
        run: cp /home/aitusa/server_side_configs/.env ./

      - name: Deploy PROD
        if: github.event_name == 'release'
        run: sudo docker-compose -f docker-compose.yml pull && sudo docker-compose -f docker-compose.yml up -d
      - name: Deploy TEST
        if: github.event.inputs.docker_tag == 'test'
        run: sudo docker-compose -f docker-compose.yml pull test-pocket-moodle-updates && sudo docker-compose -f docker-compose.yml up -d
      - name: Deploy DEV
        if: github.event.inputs.docker_tag == 'DEV'
        run: sudo docker-compose -f docker-compose.yml pull dev-pocket-moodle-updates && sudo docker-compose -f docker-compose.yml up -d

      - name: Send Telegram Notify To Pocket Moodle Chat
        if: github.event_name == 'release'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} released ${{ github.event.release.name }} of Pocket Moodle Updates:

            ${{ github.event.release.body }}

      - name: Send Telegram Notify To IT Chat
        if: github.event_name != 'release'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_IT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} builded and deployed Pocket Moodle Updates ${{ github.event.inputs.docker_tag }}:

            https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}
